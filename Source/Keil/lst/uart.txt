; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\uart.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\uart.d --feedback=.\obj\template.fed --cpu=Cortex-M0 --apcs=interwork -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini51Series\Include -I..\Library\StdDriver\inc -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include --omf_browse=.\obj\uart.crf ..\Library\StdDriver\src\uart.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  UART_ClearIntFlag PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  054a              LSLS     r2,r1,#21
;;;37     {
000002  d507              BPL      |L1.20|
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  6982              LDR      r2,[r0,#0x18]
000006  2360              MOVS     r3,#0x60
000008  431a              ORRS     r2,r2,r3
00000a  6182              STR      r2,[r0,#0x18]
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  6982              LDR      r2,[r0,#0x18]
00000e  2308              MOVS     r3,#8
000010  431a              ORRS     r2,r2,r3
000012  6182              STR      r2,[r0,#0x18]
                  |L1.20|
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  050a              LSLS     r2,r1,#20
000016  d503              BPL      |L1.32|
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
000018  6942              LDR      r2,[r0,#0x14]
00001a  2301              MOVS     r3,#1
00001c  431a              ORRS     r2,r2,r3
00001e  6142              STR      r2,[r0,#0x14]
                  |L1.32|
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
000020  048a              LSLS     r2,r1,#18
000022  d503              BPL      |L1.44|
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
000024  6982              LDR      r2,[r0,#0x18]
000026  4b05              LDR      r3,|L1.60|
000028  431a              ORRS     r2,r2,r3
00002a  6182              STR      r2,[r0,#0x18]
                  |L1.44|
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
00002c  04c9              LSLS     r1,r1,#19
00002e  d503              BPL      |L1.56|
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
000030  69c1              LDR      r1,[r0,#0x1c]
000032  2210              MOVS     r2,#0x10
000034  4311              ORRS     r1,r1,r2
000036  61c1              STR      r1,[r0,#0x1c]
                  |L1.56|
;;;53     
;;;54     }
000038  4770              BX       lr
;;;55     
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x01000001

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.2||, ||.text||
                  UART_Close PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  2100              MOVS     r1,#0
;;;37     {
000002  6041              STR      r1,[r0,#4]
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  4770              BX       lr
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.3||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.3||, ||.text||
                  UART_DisableFlowCtrl PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  6841              LDR      r1,[r0,#4]
;;;37     {
000002  2203              MOVS     r2,#3
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  0312              LSLS     r2,r2,#12
000006  4391              BICS     r1,r1,r2
000008  6041              STR      r1,[r0,#4]
00000a  4770              BX       lr
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.4||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.4||, ||.text||
                  UART_DisableInt PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  6842              LDR      r2,[r0,#4]
;;;37     {
000002  438a              BICS     r2,r2,r1
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  6042              STR      r2,[r0,#4]
000006  4770              BX       lr
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.5||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.5||, ||.text||
                  UART_EnableFlowCtrl PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  6901              LDR      r1,[r0,#0x10]
;;;37     {
000002  2201              MOVS     r2,#1
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  0252              LSLS     r2,r2,#9
000006  4311              ORRS     r1,r1,r2
000008  6101              STR      r1,[r0,#0x10]
00000a  6901              LDR      r1,[r0,#0x10]
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  2202              MOVS     r2,#2
00000e  4391              BICS     r1,r1,r2
000010  6101              STR      r1,[r0,#0x10]
000012  6941              LDR      r1,[r0,#0x14]
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  01d2              LSLS     r2,r2,#7
000016  4311              ORRS     r1,r1,r2
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
000018  6141              STR      r1,[r0,#0x14]
00001a  6841              LDR      r1,[r0,#4]
00001c  2203              MOVS     r2,#3
00001e  0312              LSLS     r2,r2,#12
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
000020  4311              ORRS     r1,r1,r2
000022  6041              STR      r1,[r0,#4]
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
000024  4770              BX       lr
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.6||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.6||, ||.text||
                  UART_EnableInt PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  6842              LDR      r2,[r0,#4]
;;;37     {
000002  430a              ORRS     r2,r2,r1
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  6042              STR      r2,[r0,#4]
000006  4770              BX       lr
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  UART_Open PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  b57f              PUSH     {r0-r6,lr}
;;;37     {
000002  4b18              LDR      r3,|L7.100|
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  460d              MOV      r5,r1
000006  4604              MOV      r4,r0
000008  cb0f              LDM      r3,{r0-r3}
00000a  466e              MOV      r6,sp
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  c60f              STM      r6!,{r0-r3}
00000e  4916              LDR      r1,|L7.104|
000010  6948              LDR      r0,[r1,#0x14]
000012  2203              MOVS     r2,#3
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  0180              LSLS     r0,r0,#6
000016  6989              LDR      r1,[r1,#0x18]
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
000018  0f80              LSRS     r0,r0,#30
00001a  0509              LSLS     r1,r1,#20
00001c  0f09              LSRS     r1,r1,#28
00001e  2300              MOVS     r3,#0
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
000020  6323              STR      r3,[r4,#0x30]
000022  60e2              STR      r2,[r4,#0xc]
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
000024  60a3              STR      r3,[r4,#8]
000026  0080              LSLS     r0,r0,#2
000028  466a              MOV      r2,sp
00002a  5810              LDR      r0,[r2,r0]
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
00002c  1c49              ADDS     r1,r1,#1
00002e  f7fffffe          BL       __aeabi_uidivmod
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
000032  4606              MOV      r6,r0
000034  2d00              CMP      r5,#0
000036  d014              BEQ      |L7.98|
;;;53     
;;;54     }
000038  0868              LSRS     r0,r5,#1
00003a  1980              ADDS     r0,r0,r6
00003c  4629              MOV      r1,r5
00003e  f7fffffe          BL       __aeabi_uidivmod
000042  490a              LDR      r1,|L7.108|
000044  1e80              SUBS     r0,r0,#2
000046  4288              CMP      r0,r1
000048  d907              BLS      |L7.90|
00004a  00e8              LSLS     r0,r5,#3
00004c  1980              ADDS     r0,r0,r6
00004e  4629              MOV      r1,r5
000050  f7fffffe          BL       __aeabi_uidivmod
000054  0900              LSRS     r0,r0,#4
000056  1e80              SUBS     r0,r0,#2
000058  e002              B        |L7.96|
                  |L7.90|
00005a  2103              MOVS     r1,#3
00005c  0709              LSLS     r1,r1,#28
00005e  4308              ORRS     r0,r0,r1
                  |L7.96|
000060  6260              STR      r0,[r4,#0x24]
                  |L7.98|
000062  bd7f              POP      {r0-r6,pc}
;;;55     
                          ENDP

                  |L7.100|
                          DCD      ||.constdata||
                  |L7.104|
                          DCD      0x50000200
                  |L7.108|
                          DCD      0x0000ffff

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.text||
                  UART_Read PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  b570              PUSH     {r4-r6,lr}
;;;37     {
000002  4604              MOV      r4,r0
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  2000              MOVS     r0,#0
000006  2501              MOVS     r5,#1
000008  07ad              LSLS     r5,r5,#30
00000a  e00c              B        |L8.38|
                  |L8.12|
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  2300              MOVS     r3,#0
00000e  e004              B        |L8.26|
                  |L8.16|
000010  1c5b              ADDS     r3,r3,#1
000012  42ab              CMP      r3,r5
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  d301              BCC      |L8.26|
000016  2000              MOVS     r0,#0
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
000018  bd70              POP      {r4-r6,pc}
                  |L8.26|
00001a  69a6              LDR      r6,[r4,#0x18]
00001c  0476              LSLS     r6,r6,#17
00001e  d4f7              BMI      |L8.16|
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
000020  6823              LDR      r3,[r4,#0]
000022  540b              STRB     r3,[r1,r0]
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
000024  1c40              ADDS     r0,r0,#1
                  |L8.38|
000026  4290              CMP      r0,r2
000028  d3f0              BCC      |L8.12|
00002a  bd70              POP      {r4-r6,pc}
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.9||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.text||
                  UART_SetLine_Config PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  b5ff              PUSH     {r0-r7,lr}
;;;37     {
000002  4b1a              LDR      r3,|L9.108|
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  4616              MOV      r6,r2
000006  460c              MOV      r4,r1
000008  4605              MOV      r5,r0
00000a  3310              ADDS     r3,r3,#0x10
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  cb0f              LDM      r3,{r0-r3}
00000e  b085              SUB      sp,sp,#0x14
000010  466f              MOV      r7,sp
000012  c70f              STM      r7!,{r0-r3}
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  4916              LDR      r1,|L9.112|
000016  6948              LDR      r0,[r1,#0x14]
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
000018  6989              LDR      r1,[r1,#0x18]
00001a  0180              LSLS     r0,r0,#6
00001c  0f80              LSRS     r0,r0,#30
00001e  0509              LSLS     r1,r1,#20
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
000020  0f09              LSRS     r1,r1,#28
000022  0080              LSLS     r0,r0,#2
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
000024  466a              MOV      r2,sp
000026  5810              LDR      r0,[r2,r0]
000028  1c49              ADDS     r1,r1,#1
00002a  f7fffffe          BL       __aeabi_uidivmod
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
00002e  4607              MOV      r7,r0
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
000030  2c00              CMP      r4,#0
000032  d014              BEQ      |L9.94|
000034  0860              LSRS     r0,r4,#1
000036  19c0              ADDS     r0,r0,r7
;;;53     
;;;54     }
000038  4621              MOV      r1,r4
00003a  f7fffffe          BL       __aeabi_uidivmod
00003e  490d              LDR      r1,|L9.116|
000040  1e80              SUBS     r0,r0,#2
000042  4288              CMP      r0,r1
000044  d907              BLS      |L9.86|
000046  00e0              LSLS     r0,r4,#3
000048  19c0              ADDS     r0,r0,r7
00004a  4621              MOV      r1,r4
00004c  f7fffffe          BL       __aeabi_uidivmod
000050  0900              LSRS     r0,r0,#4
000052  1e80              SUBS     r0,r0,#2
000054  e002              B        |L9.92|
                  |L9.86|
000056  2103              MOVS     r1,#3
000058  0709              LSLS     r1,r1,#28
00005a  4308              ORRS     r0,r0,r1
                  |L9.92|
00005c  6268              STR      r0,[r5,#0x24]
                  |L9.94|
00005e  9808              LDR      r0,[sp,#0x20]
000060  4306              ORRS     r6,r6,r0
000062  980e              LDR      r0,[sp,#0x38]
000064  4306              ORRS     r6,r6,r0
000066  60ee              STR      r6,[r5,#0xc]
000068  b009              ADD      sp,sp,#0x24
00006a  bdf0              POP      {r4-r7,pc}
;;;55     
                          ENDP

                  |L9.108|
                          DCD      ||.constdata||
                  |L9.112|
                          DCD      0x50000200
                  |L9.116|
                          DCD      0x0000ffff

                          AREA ||area_number.10||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.text||
                  UART_SetTimeoutCnt PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  6a02              LDR      r2,[r0,#0x20]
;;;37     {
000002  0a12              LSRS     r2,r2,#8
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  0212              LSLS     r2,r2,#8
000006  430a              ORRS     r2,r2,r1
000008  6202              STR      r2,[r0,#0x20]
00000a  6841              LDR      r1,[r0,#4]
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  2201              MOVS     r2,#1
00000e  02d2              LSLS     r2,r2,#11
000010  4311              ORRS     r1,r1,r2
000012  6041              STR      r1,[r0,#4]
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  4770              BX       lr
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.11||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.text||
                  UART_SelectIrDAMode PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  b5f8              PUSH     {r3-r7,lr}
;;;37     {
000002  4616              MOV      r6,r2
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  4a1e              LDR      r2,|L11.128|
000006  460d              MOV      r5,r1
000008  4604              MOV      r4,r0
00000a  6951              LDR      r1,[r2,#0x14]
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  2000              MOVS     r0,#0
00000e  0189              LSLS     r1,r1,#6
000010  6992              LDR      r2,[r2,#0x18]
000012  0f89              LSRS     r1,r1,#30
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  0512              LSLS     r2,r2,#20
000016  0f12              LSRS     r2,r2,#28
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
000018  2900              CMP      r1,#0
00001a  d019              BEQ      |L11.80|
00001c  2902              CMP      r1,#2
00001e  d300              BCC      |L11.34|
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
000020  4818              LDR      r0,|L11.132|
                  |L11.34|
000022  1c51              ADDS     r1,r2,#1
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
000024  f7fffffe          BL       __aeabi_uidivmod
000028  4607              MOV      r7,r0
00002a  2d00              CMP      r5,#0
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
00002c  d016              BEQ      |L11.92|
00002e  0868              LSRS     r0,r5,#1
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
000030  19c0              ADDS     r0,r0,r7
000032  4629              MOV      r1,r5
000034  f7fffffe          BL       __aeabi_uidivmod
;;;53     
;;;54     }
000038  4913              LDR      r1,|L11.136|
00003a  1e80              SUBS     r0,r0,#2
00003c  4288              CMP      r0,r1
00003e  d909              BLS      |L11.84|
000040  00e8              LSLS     r0,r5,#3
000042  19c0              ADDS     r0,r0,r7
000044  4629              MOV      r1,r5
000046  f7fffffe          BL       __aeabi_uidivmod
00004a  0900              LSRS     r0,r0,#4
00004c  1e80              SUBS     r0,r0,#2
00004e  e004              B        |L11.90|
                  |L11.80|
000050  480e              LDR      r0,|L11.140|
000052  e7e6              B        |L11.34|
                  |L11.84|
000054  2103              MOVS     r1,#3
000056  0709              LSLS     r1,r1,#28
000058  4308              ORRS     r0,r0,r1
                  |L11.90|
00005a  6260              STR      r0,[r4,#0x24]
                  |L11.92|
00005c  6aa0              LDR      r0,[r4,#0x28]
00005e  2120              MOVS     r1,#0x20
000060  4388              BICS     r0,r0,r1
000062  62a0              STR      r0,[r4,#0x28]
000064  6aa0              LDR      r0,[r4,#0x28]
000066  2140              MOVS     r1,#0x40
000068  4308              ORRS     r0,r0,r1
00006a  62a0              STR      r0,[r4,#0x28]
00006c  2102              MOVS     r1,#2
00006e  6aa0              LDR      r0,[r4,#0x28]
000070  2e00              CMP      r6,#0
000072  d001              BEQ      |L11.120|
000074  4308              ORRS     r0,r0,r1
000076  e000              B        |L11.122|
                  |L11.120|
000078  4388              BICS     r0,r0,r1
                  |L11.122|
00007a  62a0              STR      r0,[r4,#0x28]
00007c  6321              STR      r1,[r4,#0x30]
00007e  bdf8              POP      {r3-r7,pc}
;;;55     
                          ENDP

                  |L11.128|
                          DCD      0x50000200
                  |L11.132|
                          DCD      0x01518000
                  |L11.136|
                          DCD      0x0000ffff
                  |L11.140|
                          DCD      0x00b71b00

                          AREA ||area_number.12||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.text||
                  UART_SelectRS485Mode PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  2303              MOVS     r3,#3
;;;37     {
000002  6303              STR      r3,[r0,#0x30]
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  2300              MOVS     r3,#0
000006  62c3              STR      r3,[r0,#0x2c]
000008  6ac3              LDR      r3,[r0,#0x2c]
00000a  0612              LSLS     r2,r2,#24
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  430a              ORRS     r2,r2,r1
00000e  4313              ORRS     r3,r3,r2
000010  62c3              STR      r3,[r0,#0x2c]
000012  4770              BX       lr
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||area_number.13||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.13||, ||.text||
                  UART_Write PROC
;;;35      */
;;;36     void UART_ClearIntFlag(UART_T* uart , uint32_t u32InterruptFlag)
000000  b570              PUSH     {r4-r6,lr}
;;;37     {
000002  4604              MOV      r4,r0
;;;38     
;;;39         if(u32InterruptFlag & UART_ISR_RLS_INT_Msk) { /* clear Receive Line Status Interrupt */
;;;40             uart->FSR |= UART_FSR_BIF_Msk | UART_FSR_FEF_Msk | UART_FSR_FEF_Msk;
000004  2000              MOVS     r0,#0
000006  2501              MOVS     r5,#1
000008  07ad              LSLS     r5,r5,#30
00000a  e00c              B        |L13.38|
                  |L13.12|
;;;41             uart->FSR |= UART_FSR_RS485_ADD_DETF_Msk;
00000c  2300              MOVS     r3,#0
00000e  e004              B        |L13.26|
                  |L13.16|
000010  1c5b              ADDS     r3,r3,#1
000012  42ab              CMP      r3,r5
;;;42         }
;;;43     
;;;44         if(u32InterruptFlag & UART_ISR_MODEM_INT_Msk)  /* clear Modem Interrupt */
000014  d301              BCC      |L13.26|
000016  2000              MOVS     r0,#0
;;;45             uart->MSR |= UART_MSR_DCTSF_Msk;
000018  bd70              POP      {r4-r6,pc}
                  |L13.26|
00001a  69a6              LDR      r6,[r4,#0x18]
00001c  00f6              LSLS     r6,r6,#3
00001e  d5f7              BPL      |L13.16|
;;;46     
;;;47         if(u32InterruptFlag & UART_ISR_BUF_ERR_INT_Msk) { /* clear Buffer Error Interrupt */
000020  5c0b              LDRB     r3,[r1,r0]
000022  6023              STR      r3,[r4,#0]
;;;48             uart->FSR |= UART_FSR_RX_OVER_IF_Msk | UART_FSR_TX_OVER_IF_Msk;
000024  1c40              ADDS     r0,r0,#1
                  |L13.38|
000026  4290              CMP      r0,r2
000028  d1f0              BNE      |L13.12|
00002a  bd70              POP      {r4-r6,pc}
;;;49         }
;;;50     
;;;51         if(u32InterruptFlag & UART_ISR_TOUT_INT_Msk)  /* clear Modem Interrupt */
;;;52             uart->ISR |= UART_ISR_TOUT_IF_Msk;
;;;53     
;;;54     }
;;;55     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x00b71b00
                          DCD      0x00000000
                          DCD      0x01518000
                          DCD      0x01518000
                          DCD      0x00b71b00
                          DCD      0x00000000
                          DCD      0x01518000
                          DCD      0x01518000

;*** Start embedded assembler ***

#line 1 "..\\Library\\StdDriver\\src\\uart.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_uart_c_f12f5b44____REV16|
#line 118 "..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_uart_c_f12f5b44____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_uart_c_f12f5b44____REVSH|
#line 132
|__asm___6_uart_c_f12f5b44____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
