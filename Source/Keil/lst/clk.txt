; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\clk.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\clk.d --feedback=.\obj\template.fed --cpu=Cortex-M0 --apcs=interwork -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini51Series\Include -I..\Library\StdDriver\inc -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include --omf_browse=.\obj\clk.crf ..\Library\StdDriver\src\clk.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CLK_DisableCKO PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4802              LDR      r0,|L1.12|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6881              LDR      r1,[r0,#8]
000004  2240              MOVS     r2,#0x40
000006  4391              BICS     r1,r1,r2
000008  6081              STR      r1,[r0,#8]
;;;33     }
00000a  4770              BX       lr
;;;34     
                          ENDP

                  |L1.12|
                          DCD      0x50000200

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  CLK_EnableCKO PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  0152              LSLS     r2,r2,#5
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  430a              ORRS     r2,r2,r1
000004  2110              MOVS     r1,#0x10
000006  430a              ORRS     r2,r2,r1
000008  4905              LDR      r1,|L2.32|
;;;33     }
00000a  624a              STR      r2,[r1,#0x24]
00000c  688a              LDR      r2,[r1,#8]
00000e  2340              MOVS     r3,#0x40
000010  431a              ORRS     r2,r2,r3
000012  608a              STR      r2,[r1,#8]
000014  69ca              LDR      r2,[r1,#0x1c]
000016  230c              MOVS     r3,#0xc
000018  439a              BICS     r2,r2,r3
00001a  4302              ORRS     r2,r2,r0
00001c  61ca              STR      r2,[r1,#0x1c]
00001e  4770              BX       lr
;;;34     
                          ENDP

                  |L2.32|
                          DCD      0x50000200

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  CLK_PowerDown PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4904              LDR      r1,|L3.20|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  2004              MOVS     r0,#4
000004  6108              STR      r0,[r1,#0x10]
000006  4804              LDR      r0,|L3.24|
000008  6801              LDR      r1,[r0,#0]
;;;33     }
00000a  22c0              MOVS     r2,#0xc0
00000c  4311              ORRS     r1,r1,r2
00000e  6001              STR      r1,[r0,#0]
000010  bf30              WFI      
000012  4770              BX       lr
;;;34     
                          ENDP

                  |L3.20|
                          DCD      0xe000ed00
                  |L3.24|
                          DCD      0x50000200

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  CLK_Idle PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4803              LDR      r0,|L4.16|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6801              LDR      r1,[r0,#0]
000004  22c0              MOVS     r2,#0xc0
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;33     }
00000a  bf30              WFI      
00000c  4770              BX       lr
;;;34     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x50000200

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  CLK_GetHXTFreq PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4802              LDR      r0,|L5.12|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6800              LDR      r0,[r0,#0]
000004  07c0              LSLS     r0,r0,#31
000006  d000              BEQ      |L5.10|
000008  4801              LDR      r0,|L5.16|
                  |L5.10|
;;;33     }
00000a  4770              BX       lr
;;;34     
                          ENDP

                  |L5.12|
                          DCD      0x50000200
                  |L5.16|
                          DCD      0x00b71b00

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  CLK_GetLXTFreq PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4804              LDR      r0,|L6.20|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6800              LDR      r0,[r0,#0]
000004  0780              LSLS     r0,r0,#30
000006  d502              BPL      |L6.14|
000008  2001              MOVS     r0,#1
;;;33     }
00000a  03c0              LSLS     r0,r0,#15
00000c  4770              BX       lr
                  |L6.14|
00000e  2000              MOVS     r0,#0
000010  4770              BX       lr
;;;34     
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      0x50000200

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  CLK_GetHCLKFreq PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  b510              PUSH     {r4,lr}
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  f7fffffe          BL       SystemCoreClockUpdate
000006  4801              LDR      r0,|L7.12|
000008  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
;;;33     }
00000a  bd10              POP      {r4,pc}
;;;34     
                          ENDP

                  |L7.12|
                          DCD      SystemCoreClock

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.text||
                  CLK_GetCPUFreq PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  b510              PUSH     {r4,lr}
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  f7fffffe          BL       SystemCoreClockUpdate
000006  4801              LDR      r0,|L8.12|
000008  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
;;;33     }
00000a  bd10              POP      {r4,pc}
;;;34     
                          ENDP

                  |L8.12|
                          DCD      SystemCoreClock

                          AREA ||area_number.9||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.text||
                  CLK_SetHCLK PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4a2d              LDR      r2,|L9.184|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6913              LDR      r3,[r2,#0x10]
000004  08db              LSRS     r3,r3,#3
000006  00db              LSLS     r3,r3,#3
000008  4303              ORRS     r3,r3,r0
;;;33     }
00000a  6113              STR      r3,[r2,#0x10]
00000c  6990              LDR      r0,[r2,#0x18]
00000e  0900              LSRS     r0,r0,#4
000010  0100              LSLS     r0,r0,#4
000012  4308              ORRS     r0,r0,r1
000014  6190              STR      r0,[r2,#0x18]
000016  4770              BX       lr
;;;34     
                          ENDP

                  CLK_SetModuleClock PROC
;;;51       */
;;;52     void CLK_EnableCKO(uint32_t u32ClkSrc, uint32_t u32ClkDiv, uint32_t u32ClkDivBy1En)
;;;53     {
;;;54         /* CKO = clock source / 2^(u32ClkDiv + 1) */
;;;55         CLK->FRQDIV = CLK_FRQDIV_DIVIDER_EN_Msk | u32ClkDiv | u32ClkDivBy1En<<CLK_FRQDIV_DIVIDER1_Pos;
;;;56     
;;;57         /* Enable CKO clock source */
;;;58         CLK->APBCLK |= CLK_APBCLK_FDIV_EN_Msk;
;;;59     
;;;60         /* Select CKO clock source */
;;;61         CLK->CLKSEL2 = (CLK->CLKSEL2 & (~CLK_CLKSEL2_FRQDIV_S_Msk)) | u32ClkSrc;
000018  b570              PUSH     {r4-r6,lr}
00001a  0e43              LSRS     r3,r0,#25
00001c  071b              LSLS     r3,r3,#28
;;;62     }
00001e  d00e              BEQ      |L9.62|
000020  0043              LSLS     r3,r0,#1
000022  4c25              LDR      r4,|L9.184|
000024  0f9b              LSRS     r3,r3,#30
000026  009b              LSLS     r3,r3,#2
000028  3410              ADDS     r4,r4,#0x10
00002a  191b              ADDS     r3,r3,r4
00002c  681c              LDR      r4,[r3,#0]
00002e  00c5              LSLS     r5,r0,#3
000030  0f2d              LSRS     r5,r5,#28
000032  01c6              LSLS     r6,r0,#7
000034  0ef6              LSRS     r6,r6,#27
000036  40b5              LSLS     r5,r5,r6
000038  43ac              BICS     r4,r4,r5
00003a  430c              ORRS     r4,r4,r1
00003c  601c              STR      r4,[r3,#0]
                  |L9.62|
00003e  0a83              LSRS     r3,r0,#10
000040  0619              LSLS     r1,r3,#24
000042  0e09              LSRS     r1,r1,#24
000044  d00d              BEQ      |L9.98|
000046  0301              LSLS     r1,r0,#12
000048  4c1b              LDR      r4,|L9.184|
00004a  0f89              LSRS     r1,r1,#30
00004c  0089              LSLS     r1,r1,#2
00004e  3418              ADDS     r4,r4,#0x18
000050  1909              ADDS     r1,r1,r4
000052  680c              LDR      r4,[r1,#0]
000054  0580              LSLS     r0,r0,#22
000056  b2db              UXTB     r3,r3
000058  0ec0              LSRS     r0,r0,#27
00005a  4083              LSLS     r3,r3,r0
00005c  439c              BICS     r4,r4,r3
00005e  4314              ORRS     r4,r4,r2
000060  600c              STR      r4,[r1,#0]
                  |L9.98|
000062  bd70              POP      {r4-r6,pc}
;;;63     
                          ENDP

                  CLK_SetSysTickClockSrc PROC
;;;211      */
;;;212    void CLK_SetSysTickClockSrc(uint32_t u32ClkSrc)
000064  4a14              LDR      r2,|L9.184|
;;;213    {
;;;214        CLK->CLKSEL0 = (CLK->CLKSEL0 & ~CLK_CLKSEL0_STCLK_S_Msk) | u32ClkSrc;
000066  6911              LDR      r1,[r2,#0x10]
000068  2338              MOVS     r3,#0x38
00006a  4399              BICS     r1,r1,r3
00006c  4301              ORRS     r1,r1,r0
00006e  6111              STR      r1,[r2,#0x10]
;;;215    }
000070  4770              BX       lr
;;;216    
                          ENDP

                  CLK_EnableXtalRC PROC
;;;261      */
;;;262    void CLK_EnableXtalRC(uint32_t u32ClkMask)
000072  4911              LDR      r1,|L9.184|
;;;263    {
;;;264        CLK->PWRCON |=u32ClkMask;
000074  680a              LDR      r2,[r1,#0]
000076  4302              ORRS     r2,r2,r0
000078  600a              STR      r2,[r1,#0]
;;;265    }
00007a  4770              BX       lr
;;;266    
                          ENDP

                  CLK_EnableModuleClock PROC
;;;296      */
;;;297    void CLK_EnableModuleClock(uint32_t u32ModuleIdx)
00007c  0fc1              LSRS     r1,r0,#31
;;;298    {
;;;299        *(volatile uint32_t *)((uint32_t)&CLK->APBCLK+(MODULE_APBCLK(u32ModuleIdx)*4))  |= 1<<MODULE_IP_EN_Pos(u32ModuleIdx);
00007e  008a              LSLS     r2,r1,#2
000080  490d              LDR      r1,|L9.184|
000082  1851              ADDS     r1,r2,r1
000084  688a              LDR      r2,[r1,#8]
000086  06c3              LSLS     r3,r0,#27
000088  0edb              LSRS     r3,r3,#27
00008a  2001              MOVS     r0,#1
00008c  4098              LSLS     r0,r0,r3
00008e  4302              ORRS     r2,r2,r0
000090  608a              STR      r2,[r1,#8]
;;;300    }
000092  4770              BX       lr
;;;301    
                          ENDP

                  CLK_WaitClockReady PROC
;;;355      */
;;;356    uint32_t CLK_WaitClockReady(uint32_t u32ClkMask)
000094  b510              PUSH     {r4,lr}
;;;357    {
;;;358        int32_t i32TimeOutCnt;
;;;359    
;;;360        i32TimeOutCnt = __HSI / 200; /* About 5ms */
000096  211b              MOVS     r1,#0x1b
000098  4604              MOV      r4,r0                 ;357
00009a  0309              LSLS     r1,r1,#12
;;;361    
;;;362        while((CLK->CLKSTATUS & u32ClkMask) != u32ClkMask) {
00009c  4b06              LDR      r3,|L9.184|
00009e  e005              B        |L9.172|
                  |L9.160|
;;;363            if(i32TimeOutCnt-- <= 0)
0000a0  460a              MOV      r2,r1
0000a2  1e49              SUBS     r1,r1,#1
0000a4  2a00              CMP      r2,#0
0000a6  dc01              BGT      |L9.172|
;;;364                return 0;
0000a8  2000              MOVS     r0,#0
;;;365        }
;;;366        return 1;
;;;367    }
0000aa  bd10              POP      {r4,pc}
                  |L9.172|
0000ac  68da              LDR      r2,[r3,#0xc]          ;362
0000ae  4620              MOV      r0,r4                 ;362
0000b0  4390              BICS     r0,r0,r2              ;362
0000b2  d1f5              BNE      |L9.160|
0000b4  2001              MOVS     r0,#1                 ;366
0000b6  bd10              POP      {r4,pc}
;;;368    
                          ENDP

                  |L9.184|
                          DCD      0x50000200

                          AREA ||area_number.10||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.text||
                  CLK_EnableSysTick PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  b570              PUSH     {r4-r6,lr}
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  4a0d              LDR      r2,|L10.56|
000004  2300              MOVS     r3,#0
000006  6113              STR      r3,[r2,#0x10]
000008  2404              MOVS     r4,#4
;;;33     }
00000a  2808              CMP      r0,#8
00000c  d00f              BEQ      |L10.46|
00000e  6915              LDR      r5,[r2,#0x10]
000010  43a5              BICS     r5,r5,r4
000012  6115              STR      r5,[r2,#0x10]
000014  4d09              LDR      r5,|L10.60|
000016  692c              LDR      r4,[r5,#0x10]
000018  2638              MOVS     r6,#0x38
00001a  43b4              BICS     r4,r4,r6
00001c  4304              ORRS     r4,r4,r0
00001e  612c              STR      r4,[r5,#0x10]
                  |L10.32|
000020  6151              STR      r1,[r2,#0x14]
000022  6193              STR      r3,[r2,#0x18]
000024  6910              LDR      r0,[r2,#0x10]
000026  2101              MOVS     r1,#1
000028  4308              ORRS     r0,r0,r1
00002a  6110              STR      r0,[r2,#0x10]
00002c  bd70              POP      {r4-r6,pc}
                  |L10.46|
00002e  6910              LDR      r0,[r2,#0x10]
000030  4320              ORRS     r0,r0,r4
000032  6110              STR      r0,[r2,#0x10]
000034  e7f4              B        |L10.32|
;;;34     
                          ENDP

000036  0000              DCW      0x0000
                  |L10.56|
                          DCD      0xe000e000
                  |L10.60|
                          DCD      0x50000200

                          AREA ||area_number.11||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.text||
                  CLK_DisableSysTick PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4901              LDR      r1,|L11.8|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  2000              MOVS     r0,#0
000004  6108              STR      r0,[r1,#0x10]
000006  4770              BX       lr
;;;33     }
;;;34     
                          ENDP

                  |L11.8|
                          DCD      0xe000e000

                          AREA ||area_number.12||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.text||
                  CLK_DisableXtalRC PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4902              LDR      r1,|L12.12|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  680a              LDR      r2,[r1,#0]
000004  4382              BICS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
000008  4770              BX       lr
;;;33     }
;;;34     
                          ENDP

00000a  0000              DCW      0x0000
                  |L12.12|
                          DCD      0x50000200

                          AREA ||area_number.13||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.text||
                  CLK_DisableModuleClock PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  0fc1              LSRS     r1,r0,#31
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  008a              LSLS     r2,r1,#2
000004  4904              LDR      r1,|L13.24|
000006  1851              ADDS     r1,r2,r1
000008  688a              LDR      r2,[r1,#8]
;;;33     }
00000a  06c3              LSLS     r3,r0,#27
00000c  0edb              LSRS     r3,r3,#27
00000e  2001              MOVS     r0,#1
000010  4098              LSLS     r0,r0,r3
000012  4382              BICS     r2,r2,r0
000014  608a              STR      r2,[r1,#8]
000016  4770              BX       lr
;;;34     
                          ENDP

                  |L13.24|
                          DCD      0x50000200

                          AREA ||area_number.14||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.text||
                  CLK_SysTickDelay PROC
;;;28       */
;;;29     void CLK_DisableCKO(void)
000000  4906              LDR      r1,|L14.28|
;;;30     {
;;;31         /* Disable CKO clock source */
;;;32         CLK->APBCLK &= (~CLK_APBCLK_FDIV_EN_Msk);
000002  6809              LDR      r1,[r1,#0]  ; CyclesPerUs
000004  4348              MULS     r0,r1,r0
000006  4906              LDR      r1,|L14.32|
000008  6148              STR      r0,[r1,#0x14]
;;;33     }
00000a  2200              MOVS     r2,#0
00000c  618a              STR      r2,[r1,#0x18]
00000e  2005              MOVS     r0,#5
000010  6108              STR      r0,[r1,#0x10]
                  |L14.18|
000012  6908              LDR      r0,[r1,#0x10]
000014  03c0              LSLS     r0,r0,#15
000016  d5fc              BPL      |L14.18|
000018  610a              STR      r2,[r1,#0x10]
00001a  4770              BX       lr
;;;34     
                          ENDP

                  |L14.28|
                          DCD      CyclesPerUs
                  |L14.32|
                          DCD      0xe000e000

;*** Start embedded assembler ***

#line 1 "..\\Library\\StdDriver\\src\\clk.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_clk_c_9b5832dc____REV16|
#line 118 "..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_clk_c_9b5832dc____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_clk_c_9b5832dc____REVSH|
#line 132
|__asm___5_clk_c_9b5832dc____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
