; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\adc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\adc.d --feedback=.\obj\template.fed --cpu=Cortex-M0 --apcs=interwork -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\Mini51Series\Include -I..\Library\StdDriver\inc -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include --omf_browse=.\obj\adc.crf ..\Library\StdDriver\src\adc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ADC_Open PROC
;;;36       */
;;;37     void ADC_Open(ADC_T *adc,
000000  4804              LDR      r0,|L1.20|
;;;38                   uint32_t u32InputMode,
;;;39                   uint32_t u32OpMode,
;;;40                   uint32_t u32ChMask)
;;;41     {
;;;42     
;;;43         ADC->ADCR = 0;  // A clean start.
000002  2100              MOVS     r1,#0
000004  6201              STR      r1,[r0,#0x20]
;;;44         ADC->ADCHER  = (ADC->ADCHER & ~ADC_ADCHER_CHEN_Msk) | u32ChMask;
000006  6a41              LDR      r1,[r0,#0x24]
000008  0a09              LSRS     r1,r1,#8
00000a  0209              LSLS     r1,r1,#8
00000c  4319              ORRS     r1,r1,r3
00000e  6241              STR      r1,[r0,#0x24]
;;;45         return;
;;;46     }
000010  4770              BX       lr
;;;47     
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      0x400e0000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.2||, ||.text||
                  ADC_Close PROC
;;;36       */
;;;37     void ADC_Open(ADC_T *adc,
000000  2005              MOVS     r0,#5
;;;38                   uint32_t u32InputMode,
;;;39                   uint32_t u32OpMode,
;;;40                   uint32_t u32ChMask)
;;;41     {
;;;42     
;;;43         ADC->ADCR = 0;  // A clean start.
000002  0700              LSLS     r0,r0,#28
000004  68c2              LDR      r2,[r0,#0xc]
;;;44         ADC->ADCHER  = (ADC->ADCHER & ~ADC_ADCHER_CHEN_Msk) | u32ChMask;
000006  2101              MOVS     r1,#1
000008  0709              LSLS     r1,r1,#28
00000a  430a              ORRS     r2,r2,r1
00000c  60c2              STR      r2,[r0,#0xc]
00000e  68c2              LDR      r2,[r0,#0xc]
;;;45         return;
;;;46     }
000010  438a              BICS     r2,r2,r1
000012  60c2              STR      r2,[r0,#0xc]
000014  4770              BX       lr
;;;47     
                          ENDP


                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  ADC_EnableHWTrigger PROC
;;;36       */
;;;37     void ADC_Open(ADC_T *adc,
000000  b530              PUSH     {r4,r5,lr}
;;;38                   uint32_t u32InputMode,
;;;39                   uint32_t u32OpMode,
;;;40                   uint32_t u32ChMask)
;;;41     {
;;;42     
;;;43         ADC->ADCR = 0;  // A clean start.
000002  480d              LDR      r0,|L3.56|
000004  6a03              LDR      r3,[r0,#0x20]
;;;44         ADC->ADCHER  = (ADC->ADCHER & ~ADC_ADCHER_CHEN_Msk) | u32ChMask;
000006  24ff              MOVS     r4,#0xff
000008  3471              ADDS     r4,r4,#0x71
00000a  43a3              BICS     r3,r3,r4
00000c  6203              STR      r3,[r0,#0x20]
00000e  1583              ASRS     r3,r0,#22
;;;45         return;
;;;46     }
000010  2900              CMP      r1,#0
000012  d00b              BEQ      |L3.44|
000014  4c08              LDR      r4,|L3.56|
000016  3440              ADDS     r4,r4,#0x40
000018  6865              LDR      r5,[r4,#4]
00001a  0a2d              LSRS     r5,r5,#8
00001c  022d              LSLS     r5,r5,#8
00001e  4315              ORRS     r5,r5,r2
000020  6065              STR      r5,[r4,#4]
000022  6a02              LDR      r2,[r0,#0x20]
000024  4319              ORRS     r1,r1,r3
000026  430a              ORRS     r2,r2,r1
000028  6202              STR      r2,[r0,#0x20]
00002a  bd30              POP      {r4,r5,pc}
                  |L3.44|
00002c  6a01              LDR      r1,[r0,#0x20]
00002e  431a              ORRS     r2,r2,r3
000030  4311              ORRS     r1,r1,r2
000032  6201              STR      r1,[r0,#0x20]
000034  bd30              POP      {r4,r5,pc}
;;;47     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      0x400e0000

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  ADC_DisableHWTrigger PROC
;;;36       */
;;;37     void ADC_Open(ADC_T *adc,
000000  4803              LDR      r0,|L4.16|
;;;38                   uint32_t u32InputMode,
;;;39                   uint32_t u32OpMode,
;;;40                   uint32_t u32ChMask)
;;;41     {
;;;42     
;;;43         ADC->ADCR = 0;  // A clean start.
000002  6a01              LDR      r1,[r0,#0x20]
000004  22ff              MOVS     r2,#0xff
;;;44         ADC->ADCHER  = (ADC->ADCHER & ~ADC_ADCHER_CHEN_Msk) | u32ChMask;
000006  3271              ADDS     r2,r2,#0x71
000008  4391              BICS     r1,r1,r2
00000a  6201              STR      r1,[r0,#0x20]
00000c  4770              BX       lr
;;;45         return;
;;;46     }
;;;47     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x400e0000

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  ADC_SetExtraSampleTime PROC
;;;36       */
;;;37     void ADC_Open(ADC_T *adc,
000000  4803              LDR      r0,|L5.16|
;;;38                   uint32_t u32InputMode,
;;;39                   uint32_t u32OpMode,
;;;40                   uint32_t u32ChMask)
;;;41     {
;;;42     
;;;43         ADC->ADCR = 0;  // A clean start.
000002  6881              LDR      r1,[r0,#8]
000004  0909              LSRS     r1,r1,#4
;;;44         ADC->ADCHER  = (ADC->ADCHER & ~ADC_ADCHER_CHEN_Msk) | u32ChMask;
000006  0109              LSLS     r1,r1,#4
000008  4311              ORRS     r1,r1,r2
00000a  6081              STR      r1,[r0,#8]
00000c  4770              BX       lr
;;;45         return;
;;;46     }
;;;47     
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      0x400e0040

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  ADC_EnableInt PROC
;;;36       */
;;;37     void ADC_Open(ADC_T *adc,
000000  07cb              LSLS     r3,r1,#31
;;;38                   uint32_t u32InputMode,
;;;39                   uint32_t u32OpMode,
;;;40                   uint32_t u32ChMask)
;;;41     {
;;;42     
;;;43         ADC->ADCR = 0;  // A clean start.
000002  4809              LDR      r0,|L6.40|
000004  2202              MOVS     r2,#2
;;;44         ADC->ADCHER  = (ADC->ADCHER & ~ADC_ADCHER_CHEN_Msk) | u32ChMask;
000006  2b00              CMP      r3,#0
000008  d002              BEQ      |L6.16|
00000a  6a03              LDR      r3,[r0,#0x20]
00000c  4313              ORRS     r3,r3,r2
00000e  6203              STR      r3,[r0,#0x20]
                  |L6.16|
;;;45         return;
;;;46     }
000010  078b              LSLS     r3,r1,#30
000012  d502              BPL      |L6.26|
000014  6a83              LDR      r3,[r0,#0x28]
000016  4313              ORRS     r3,r3,r2
000018  6283              STR      r3,[r0,#0x28]
                  |L6.26|
00001a  0749              LSLS     r1,r1,#29
00001c  d502              BPL      |L6.36|
00001e  6ac1              LDR      r1,[r0,#0x2c]
000020  4311              ORRS     r1,r1,r2
000022  62c1              STR      r1,[r0,#0x2c]
                  |L6.36|
000024  4770              BX       lr
;;;47     
                          ENDP

000026  0000              DCW      0x0000
                  |L6.40|
                          DCD      0x400e0000

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  ADC_DisableInt PROC
;;;36       */
;;;37     void ADC_Open(ADC_T *adc,
000000  07cb              LSLS     r3,r1,#31
;;;38                   uint32_t u32InputMode,
;;;39                   uint32_t u32OpMode,
;;;40                   uint32_t u32ChMask)
;;;41     {
;;;42     
;;;43         ADC->ADCR = 0;  // A clean start.
000002  4809              LDR      r0,|L7.40|
000004  2202              MOVS     r2,#2
;;;44         ADC->ADCHER  = (ADC->ADCHER & ~ADC_ADCHER_CHEN_Msk) | u32ChMask;
000006  2b00              CMP      r3,#0
000008  d002              BEQ      |L7.16|
00000a  6a03              LDR      r3,[r0,#0x20]
00000c  4393              BICS     r3,r3,r2
00000e  6203              STR      r3,[r0,#0x20]
                  |L7.16|
;;;45         return;
;;;46     }
000010  078b              LSLS     r3,r1,#30
000012  d502              BPL      |L7.26|
000014  6a83              LDR      r3,[r0,#0x28]
000016  4393              BICS     r3,r3,r2
000018  6283              STR      r3,[r0,#0x28]
                  |L7.26|
00001a  0749              LSLS     r1,r1,#29
00001c  d502              BPL      |L7.36|
00001e  6ac1              LDR      r1,[r0,#0x2c]
000020  4391              BICS     r1,r1,r2
000022  62c1              STR      r1,[r0,#0x2c]
                  |L7.36|
000024  4770              BX       lr
;;;47     
                          ENDP

000026  0000              DCW      0x0000
                  |L7.40|
                          DCD      0x400e0000

;*** Start embedded assembler ***

#line 1 "..\\Library\\StdDriver\\src\\adc.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_adc_c_ADC_Open____REV16|
#line 118 "..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_adc_c_ADC_Open____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_adc_c_ADC_Open____REVSH|
#line 132
|__asm___5_adc_c_ADC_Open____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
